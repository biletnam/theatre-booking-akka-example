akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 60 seconds

  actor {
    provider = cluster
  }

  cluster {
    seed-nodes = []
    downing-provider-class = "tanukki.akka.cluster.autodown.MajorityLeaderAutoDowning"
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      bind-hostname = 0.0.0.0
      bind-port = 2551

      hostname = ${?HOST_IP}
      port = ${?HOST_PORT}
    }
  }

  extensions = [de.heikoseeberger.constructr.ConstructrExtension]
}

custom-downing {
  stable-after = 20 seconds
  majority-leader-auto-downing {
    # Shutdown ActorSystem on split brain resolution.
    # Setting to be true is favored in aspect of "fail fast".
    # If set to be false, only cluster will be shutdown and ActorSystem is preserved. Mainly for test purpose.
    shutdown-actor-system-on-resolution = true
    down-if-in-minority = true
  }
}


constructr {
  coordination {
    # You can specify more than one URI using commas
    # For example: "10.10.10.10:2181,10.10.10.11:2181,10.10.10.12:2181"
    nodes = "localhost:2181"
    nodes = ${?ZOOKEEPER_URIS}
  }
}
